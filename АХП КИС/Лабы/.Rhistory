setwd("C:/Users/aalex/OneDrive/Рабочий стол/Учёба/8_sem/АХП КИС/Лабы")
View(data.frame(k,m,t1,t2))
Variant<-1
set.seed(Variant)
k<-sample(c(10:25),1)
m<-sample(c(3:6),1)
t1<-sample(c(14:20),1)
t2<-sample(c(2:5),1)
View(data.frame(k,m,t1,t2))
install.packages("matrixcalc")
library(matrixcalc)
Variant<-1
set.seed(Variant)
k<-sample(c(4:9),1)
pp1<-runif(4)
pp2<-runif(3)
pp3<-runif(2)
p1<-pp1/sum(pp1)
p2<-c(c(0),pp2/sum(pp2))
p3<-c(c(0,0),pp3/sum(pp3))
p4<-c(0,0,0,1)
P<-data.frame()
P<-rbind(P,p1)
P<-rbind(P,p2)
P<-rbind(P,p3)
P<-rbind(P,p4)
rownames(P)<-c("p1","p2","p3","p4")
colnames(P)<-c("","","","")
# View(P)
print(paste("k=",as.character(k)))
# теория
p0<-matrix(c(1, 0, 0, 0), ncol=4, nrow=1, byrow=TRUE)
print(p0)
print(P)
p0 %*% matrix.power(data.matrix(P),k)
p0 %*% matrix.power(data.matrix(P),k-1)
p0 %*% matrix.power(data.matrix(P),k-2)
# теория
p0<-matrix(c(1, 0, 0, 0), ncol=4, nrow=1, byrow=TRUE)
print(p0)
print(P)
p0 %*% matrix.power(data.matrix(P),k)
p0 %*% matrix.power(data.matrix(P),k-1)
p0 %*% matrix.power(data.matrix(P),k-2)
findState<-function(state){
rnum<-runif(1)
if(state == 1)
{
if(rnum <= P[1, 1]){
# sk[1] = sk[1]+1
result = 1
}
else
if(rnum > P[1, 1] & rnum <= P[1,1]+P[1, 2]){
# sk[2] = sk[2]+1
result=2
}
else
if(rnum > P[1,1]+P[1, 2] & rnum <= P[1,1]+P[1, 2]+P[1,3]){
# sk[3] = sk[3]+1
result=3
}
else
if(rnum > P[1,1]+P[1, 2]+P[1,3] & rnum <= P[1,1]+P[1, 2]+P[1,3]+P[1,4]){
# sk[4] = sk[4]+1
result=4
}
}
else
if(state == 2)
{
if(rnum <= P[2, 2]){
# sk[2] = sk[2]+1
result = 2
}
else
if(rnum > P[2, 2] & rnum <= P[2,2]+P[2, 3]){
# sk[3] = sk[3]+1
result=3
}
else
if(rnum > P[2,2]+P[2, 3] & rnum <= P[2,2]+P[2, 3]+P[2,4]){
# sk[4] = sk[4]+1
result=4
}
}
else
if(state == 3)
{
if(rnum <= P[3, 3]){
# sk[3] = sk[3]+1
result = 3
}
else
if(rnum > P[3, 3] & rnum <= P[3,3]+P[3, 4]){
# sk[4] = sk[4]+1
result=4
}
}
else
if(state == 4)
{
# sk[4] = sk[4]+1
result=4
}
return(result)
}
# практика
sk<-c(0,0,0,0)
sk1<-c(0,0,0,0)
sk2<-c(0,0,0,0)
lstate = 1
for (j in c(1:100000)) {
for (i in c(1:4)) {
lstate=findState(lstate)
}
if(lstate==1)
sk[1] = sk[1]+1
else
if(lstate==2)
sk[2] = sk[2]+1
else
if(lstate==3)
sk[3] = sk[3]+1
else
if(lstate==4)
sk[4] = sk[4]+1
lstate = 1
for (i in c(1:3)) {
lstate=findState(lstate)
}
if(lstate==1)
sk1[1] = sk1[1]+1
else
if(lstate==2)
sk1[2] = sk1[2]+1
else
if(lstate==3)
sk1[3] = sk1[3]+1
else
if(lstate==4)
sk1[4] = sk1[4]+1
lstate = 1
for (i in c(1:2)) {
lstate=findState(lstate)
}
if(lstate==1)
sk2[1] = sk2[1]+1
else
if(lstate==2)
sk2[2] = sk2[2]+1
else
if(lstate==3)
sk2[3] = sk2[3]+1
else
if(lstate==4)
sk2[4] = sk2[4]+1
lstate = 1
}
sk
sk1
sk2
spos<-c(0,0,0,0)
spos1<-c(0,0,0,0)
spos2<-c(0,0,0,0)
for (i in c(1:4)) {
spos[i]<-sk[i]/100000
}
for (i in c(1:4)) {
spos1[i]<-sk1[i]/100000
}
for (i in c(1:4)) {
spos2[i]<-sk2[i]/100000
}
spos
p0 %*% matrix.power(data.matrix(P),k)
spos1
p0 %*% matrix.power(data.matrix(P),k-1)
spos2
p0 %*% matrix.power(data.matrix(P),k-2)
lambda<-k/t1
u<-1/t2
y<-lambda/u
y
lambda<-k/t1
u<-1/t2
y<-lambda/u
sum0<-0
for (i in 0:m) {
sum0<-((y^i)/factorial(i))
}
P0<-sum0+((y^(m+1))/(factorial(m)*(m-y)))^-1
P0
P0<-(sum0+(y^(m+1))/(factorial(m)*(m-y)))^-1
P0
P0<-((sum0+(y^(m+1)))/(factorial(m)*(m-y)))^-1
P0
lambda<-k/t1
u<-1/t2
y<-lambda/u
sum0<-0
for (i in 0:m) {
sum0<-sum0+((y^i)/factorial(i))
}
P0<-((sum0+(y^(m+1)))/(factorial(m)*(m-y)))^-1
P0
lambda<-k/t1
Variant<-1
set.seed(Variant)
k<-sample(c(10:25),1)
m<-sample(c(3:6),1)
t1<-sample(c(14:20),1)
t2<-sample(c(2:5),1)
View(data.frame(k,m,t1,t2))
lambda<-k/t1
u<-1/t2
y<-lambda/u
sum0<-0
for (i in 0:m) {
sum0<-sum0+((y^i)/factorial(i))
}
P0<-((sum0+(y^(m+1)))/(factorial(m)*(m-y)))^-1
P0
Variant<-1
set.seed(Variant)
k<-sample(c(10:25),1)
m<-sample(c(3:6),1)
t1<-sample(c(14:20),1)
t2<-sample(c(2:5),1)
# View(data.frame(k,m,t1,t2))
lambda<-k/t1
u<-1/t2
y<-lambda/u
sum0<-0
for (i in 0:m) {
sum0<-sum0+(y^i/factorial(i))
}
P0<-((sum0+(y^(m+1)))/(factorial(m)*(m-y)))^-1
P0
lambda<-k/t1
u<-1/t2
y<-lambda/u
sum0<-0
for (i in 0:m) {
sum0<-sum0+(y^i/factorial(i))
}
P0<-((sum0+(y^(m+1)))/(factorial(m)*(m-y)))^-1
P0
Variant<-1
set.seed(Variant)
k<-sample(c(10:25),1)
m<-sample(c(3:6),1)
t1<-sample(c(14:20),1)
t2<-sample(c(2:5),1)
# View(data.frame(k,m,t1,t2))
lambda<-k/t1
u<-1/t2
y<-lambda/u
sum0<-0
for (i in 0:m) {
sum0<-sum0+(y^i/factorial(i))
}
P0=(sum0+(y^(m+1)/factorial(m)*(m-y)))^-1
P0
1-P0
